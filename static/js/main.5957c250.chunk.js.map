{"version":3,"sources":["components/SuperInputText/SuperInputText.module.css","components/SuperCheckbox/SuperCheckbox.module.css","components/SuperButton/SuperButton.module.css","App.module.css","components/SuperInputText/SuperInputText.tsx","components/SuperCheckbox/SuperCheckbox.tsx","components/SuperButton/SuperButton.tsx","pages/Test/Test.tsx","pages/Login/Login.tsx","pages/Registration/Registration.tsx","pages/EnterNewPassword/EnterNewPassword.tsx","pages/PasswordRecovery/PasswordRecovery.tsx","pages/Profile/Profile.tsx","pages/Page404/Page404.tsx","App.tsx","reportWebVitals.ts","store/reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","superInput","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","Test","Login","Registration","EnterNewPassword","PasswordRecovery","Profile","Page404","App","navbar","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","reducer","state","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5957c250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3PyPd\",\"errorInput\":\"SuperInputText_errorInput__3cspB\",\"error\":\"SuperInputText_error__1iRNx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3diNH\",\"spanClassName\":\"SuperCheckbox_spanClassName__fBci3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__41CGj\",\"red\":\"SuperButton_red__2kbnd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"App_navbar__DNJb3\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={error ? finalInputClassName : s.superInput}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react';\r\nimport SuperInputText from \"../../components/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../components/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../components/SuperButton/SuperButton\";\r\n\r\nconst Test = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText />\r\n            <SuperCheckbox />\r\n            <SuperButton />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Test;","import React from 'react';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            Login\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <div>\r\n            Registration\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;","import React from 'react';\r\n\r\nconst EnterNewPassword = () => {\r\n    return (\r\n        <div>\r\n            Enter new password\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnterNewPassword;","import React from 'react';\r\n\r\nconst PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            Password recovery\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordRecovery;","import React from 'react';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            Page 404\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page404;","import React from 'react';\nimport s from './App.module.css'\nimport Test from \"./pages/Test/Test\";\nimport {NavLink, Route, Routes} from \"react-router-dom\";\nimport Login from \"./pages/Login/Login\";\nimport Registration from \"./pages/Registration/Registration\";\nimport EnterNewPassword from \"./pages/EnterNewPassword/EnterNewPassword\";\nimport PasswordRecovery from \"./pages/PasswordRecovery/PasswordRecovery\";\nimport Profile from \"./pages/Profile/Profile\";\nimport Page404 from \"./pages/Page404/Page404\";\n\nconst App = () => {\n    return (\n        <div>\n            <nav className={s.navbar}>\n                <NavLink to={'login'}>Login</NavLink>\n                <NavLink to={'registration'}>Registration</NavLink>\n                <NavLink to={'enterpassword'}>Enter password</NavLink>\n                <NavLink to={'recoverypassword'}>Recovery password</NavLink>\n                <NavLink to={'profile'}>Profile</NavLink>\n                <NavLink to={'404'}>404</NavLink>\n            </nav>\n            <Routes>\n                <Route path={'login'} element={<Login/>}/>\n                <Route path={'registration'} element={<Registration/>}/>\n                <Route path={'enterpassword'} element={<EnterNewPassword/>}/>\n                <Route path={'recoverypassword'} element={<PasswordRecovery/>}/>\n                <Route path={'profile'} element={<Profile/>}/>\n                <Route path={'404'} element={<Page404/>}/>\n            </Routes>\n            <Test/>\n        </div>\n    );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\ntype InitialStateType = {}\r\n\r\nconst initialState: InitialStateType = {}\r\n\r\nexport const reducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {reducer} from \"./reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers({\r\n    reducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}